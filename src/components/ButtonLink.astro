---
interface Props {
    href: string;
    text: string;
    variant?: "primary" | "secondary";
    isDownload?: boolean;
    isTab?: boolean;
}

const { href, text, variant = "primary", isDownload, isTab } = Astro.props;
---

{
    isDownload ? (
        <a class={`button-link ${variant}`} download href={href}>
            {text}
        </a>
    ) : isTab ? (
        <a class={`button-link ${variant}`} href={href} target="_blank">
            {text}
        </a>
    ) : (
        <a class={`button-link ${variant}`} href={href}>
            {text}
        </a>
    )
}

<style>
    a {
        padding: 14px 32px;
        display: block;
        underline: none;
        width: 230px;
        text-align: center;
        text-decoration: none;
        font-size: 18px;

        @media screen and (max-width: 600px) {
            & {
                font-size: 14px;
                width: 100%;
            }
        }
    }

    .primary {
        background: var(--primary);
        color: white;
    }

    .secondary {
        background: white;
        color: var(--primary);
        border: 1px solid var(--primary);
    }
</style>
